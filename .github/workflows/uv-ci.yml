name: "Continuous Integration"

on:
  workflow_call:
    inputs:
      package:
        required: true
        type: string
      python-versions:
        required: true
        type: string
jobs:
  tests:
    name: python ${{ matrix.python-version }} tests, ${{ matrix.uv-resolution }} dependencies
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ${{ fromJson(inputs.python-versions) }}
        uv-resolution:
          - "lowest-direct"
          - "highest"
    steps:
      - uses: actions/checkout@v4

      - name: Install uv and set the python version
        uses: astral-sh/setup-uv@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache-dependency-glob: "**/pyproject.toml"
          cache-suffix: ${{ matrix.uv-resolution }}

      - name: Install the project
        run: uv sync --all-extras --dev --resolution ${{ matrix.uv-resolution }}

      - name: Run tests
        run: |
          export COVERAGE_FILE=.coverage.$GITHUB_JOB
          uv run -m pytest --cov

      - name: Upload coverage data
        uses: actions/upload-artifact@v4
        with:
          name: coverage-data-${{ matrix.python-version }}-${{ matrix.uv-resolution }}
          path: .coverage.*
          include-hidden-files: true
          if-no-files-found: ignore

  coverage:
    needs: tests
    runs-on: ubuntu-latest
    steps:
      - uses: cjw296/python-action/check-coverage@v1

  typing:
    name: python ${{ matrix.python-version }} type checking
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ${{ fromJson(inputs.python-versions) }}
    steps:
      - uses: actions/checkout@v4

      - uses: astral-sh/setup-uv@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache-dependency-glob: "**/pyproject.toml"

      - name: Install the project
        run: uv sync --all-extras --dev

      - name: Run tests
        run: uv run mypy src tests

  formatting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: astral-sh/setup-uv@v5
        with:
          cache-dependency-glob: "**/pyproject.toml"

      - name: Check formatting is correct
        run:  |
          uv tool install black
          black --check .

  build-and-inspect-package:
    needs:
      - coverage
      - tests
      - formatting
      - typing
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: hynek/build-and-inspect-python-package@v2

  check-package:
    needs:
      - build-and-inspect-package
    runs-on: ubuntu-latest
    steps:
      - uses: cjw296/python-action/check-distributions@v1
        with:
          package: ${{ inputs.package }}
